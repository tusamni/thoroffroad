---
import Layout from "@/layouts/Layout";

// imports
import { closestNumber } from "@/functions/Misc";
import { getBuildImage } from "@/functions/Image";
import { Icon } from "astro-icon";

import Background from "@/components/content/Background";
import BuildSnippet from "@/components/builds/BuildSnippet";
import Container from "@/components/Container";
import Picture from "@/components/images/Picture";
import Section from "@/components/Section";

// content
import { getCollection, getEntry } from "astro:content";
export async function getStaticPaths() {
    const allMakes = await getCollection("makes");
    return allMakes.map((make) => ({
        params: { make: make.slug },
        props: { make },
    }));
}
const { make } = Astro.props;

const allModels = await getCollection("models", ({ data }) => {
    return data.make.toLowerCase().includes(make.slug) && data.draft !== true;
});
const allBuilds = (
    await getCollection("builds", ({ data }) => {
        return data.make.includes(make.data.title);
    })
).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
const featuredBuild = await getEntry("builds", make.data.featured.id);

const buildCount = closestNumber(allBuilds.length, 3, 3);
---

<Layout>
    <div class="relative h-[25em] md:h-[35em]">
        <Picture src={getBuildImage(featuredBuild.data.id, make.data.featured.image.heading)} alt=`${make.data.title} Outfitting in Austin, TX` loading="eager" class="w-full h-full object-cover absolute" />
    </div>

    <div class="bg-gradient-to-l from-orange-50 to-orange-200 p-4">
        <Container>
            <div class="flex justify-between items-center">
                <div class="max-w-xl">
                    <div class="font-medium">
                        {`${featuredBuild.data.year} ${featuredBuild.data.make} ${featuredBuild.data.model}`}
                    </div>

                    <ul class="line-clamp-1 comma-list tracking-tight text-sm text-stone-700">
                        {featuredBuild.data.parts.map((p) => <li>{p}</li>)}
                    </ul>
                </div>

                <a href={`/builds/${featuredBuild.slug}`} class="button button-ghost button-inverse">
                    <div class="button-text">View Build</div>
                </a>
            </div>
        </Container>
    </div>

    <Section classes="relative overflow-hidden">
        <div class="space-y-32">
            <Container>
                <Icon name={`makes/${make.data.logo}Icon`} class:list={[make.data.logoColor, "absolute w-72 lg:w-[25em] xl:w-[30em] h-auto right-0 xl:right-40 -rotate-12 -mt-24 lg:-mt-60"]} />

                <div>
                    <div class="space-y-20">
                        <div class="space-y-6 max-w-4xl">
                            <h1>We're <i>the</i>&nbsp;{make.data.title} Experts</h1>

                            <div set:html={make.data.descriptionLong} class="text-xl text-stone-700 leading-9 tracking-tight" />
                            <div set:html={make.data.descriptionPush} class="text-xl text-stone-700 leading-9 tracking-tight" />
                        </div>
                    </div>
                </div>
            </Container>

            <Container large={true}>
                <div class="grid grid-cols-2 md:grid-cols-4 h-[35vh] md:h-72 gap-4 md:gap-8">
                    {
                        make.data.featured.image.gallery.map((p) => (
                            <div class="relative">
                                <Picture src={getBuildImage(featuredBuild.data.id, p)} alt={`${make.data.title} Outfitting in Austin, TX`} loading="eager" class="w-full h-full object-cover absolute rounded-sm" />
                            </div>
                        ))
                    }
                </div>
            </Container>

            <Container>
                <div class="relative grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    {
                        allModels.map((m) => (
                            <div class="group flex flex-col justify-between border border-stone-300 rounded-sm bg-white">
                                <div class="h-full p-8 flex flex-col gap-8 justify-between">
                                    <div class="space-y-5">
                                        <h3 class="text-2xl font-semibold leading-6">{m.data.title}</h3>
                                        <div class="leading-6 text-stone-500 space-y-8" set:html={m.data.descriptionLong} />
                                    </div>

                                    <button type="submit" class="button button-primary">
                                        <div class="button-text">Build Your {m.data.title}</div>
                                    </button>
                                </div>
                            </div>
                        ))
                    }
                </div>
            </Container>
        </div>

        <Container>
            {
                allBuilds.length >= 3 && (
                    <div class="space-y-16">
                        <h2 class="text-center">Recent {make.data.title} Builds</h2>

                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-12">{allBuilds.map((b) => <BuildSnippet build={b} sizes="800px" pad={false} classes="h-[28em]" />).slice(0, buildCount)}</div>
                    </div>
                )
            }
        </Container>
    </Section>
</Layout>
