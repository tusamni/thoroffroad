---
import Layout from "@/layouts/Layout";

// imports
import { closestNumber } from "@/functions/Misc";
import { getBuildImage } from "@/functions/Image";
import { Icon } from "astro-icon";

import BuildSnippet from "@/components/builds/BuildSnippet";
import Container from "@/components/Container";
import Gallery from "@/components/images/Gallery";
import Picture from "@/components/images/Picture";
import Section from "@/components/Section";

// content
import { getCollection, getEntry } from "astro:content";
export async function getStaticPaths() {
    const allParts = await getCollection("parts");
    return allParts.map((part) => ({
        params: { part: part.slug },
        props: { part },
    }));
}
const { part } = Astro.props;

// get brands
const allBrands = await getCollection("brands", ({ data }) => {
    return data.parts.includes(part.slug) && data.logo;
});
const allBuilds = (
    await getCollection("builds", ({ data }) => {
        return data.categories.includes(part.slug);
    })
).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
const featuredBuild = await getEntry("builds", part.data.featured.id);
const buildCount = closestNumber(allBuilds.length, 4, 8);

let remainder = allBuilds.length / 2 == 0 ? 4 : 5;
---

<Layout title={part.data.seoTitle} description={part.data.seoDescription}>
    <div class="relative h-[35vh] md:h-[35em]">
        <Picture src={getBuildImage(featuredBuild.data.id, part.data.featured.image.heading)} alt={featuredBuild.data.summary} loading="eager" class="w-full h-full object-cover absolute" />
    </div>

    <div class="bg-gradient-to-l from-orange-50 sm:to-orange-200 to-orange-100 py-4">
        <Container>
            <div class="flex flex-col sm:flex-row justify-between sm:items-center gap-4 sm:gap-6">
                <div class="max-w-xl">
                    <div class="font-medium">
                        {`${featuredBuild.data.year} ${featuredBuild.data.make} ${featuredBuild.data.model}`}
                    </div>

                    <ul class="line-clamp-1 comma-list tracking-tight text-sm text-stone-700">
                        {featuredBuild.data.parts.map((p) => <li>{p}</li>)}
                    </ul>
                </div>

                <div><a href={`/builds/${featuredBuild.slug}`} class="text-sm sm:text-base hover:underline font-medium whitespace-nowrap">View Build</a></div>
            </div>
        </Container>
    </div>

    <Section>
        <Container>
            <div class="space-y-6 max-w-4xl">
                <h1>We're <i>the</i>&nbsp;{part.data.title} Experts</h1>
                <div set:html={part.data.descriptionLong} class="text-xl text-stone-700 leading-9 tracking-tight space-y-8" />
            </div>
        </Container>

        <Container large={true}>
            <div class="text-xl font-semibold mb-6 text-center">Featured {part.data.title} Build</div>
            <Gallery>
                <div class="grid grid-cols-2 md:grid-cols-4 h-[50vh] md:h-72 gap-4 md:gap-8">
                    {
                        part.data.featured.image.gallery.map((p) => (
                            <div class="relative">
                                <Picture src={getBuildImage(featuredBuild.data.id, p)} buildId={featuredBuild.data.id} class="w-full h-full object-cover absolute rounded" sizes="(min-height: 768px) 25vw, 50vw" />
                            </div>
                        ))
                    }
                </div>
            </Gallery>
        </Container>

        <Container large={false}>
            <div class="grid grid-cols-5 gap-16">
                <div class:list={[part.data.contentParts.length < 7 ? "md:col-span-3" : "md:col-span-2", "col-span-5 space-y-6"]}>
                    <h2>{part.data.title} Upgrades</h2>
                    <div class="leading-8 tracking-tight text-stone-700 text-lg space-y-6" set:html={part.data.contentSidebar} />
                </div>

                <div class:list={[part.data.contentParts.length < 7 ? "md:col-span-2 xl:grid-cols-2" : "md:col-span-3 xl:grid-cols-3", "h-fit col-span-5 grid sm:grid-cols-2 lg:grid-cols-3 gap-8"]}>
                    {
                        part.data.contentParts.map(
                            (p) =>
                                p.description && (
                                    <div class="relative">
                                        <Icon name="hero/CheckCircle" class="absolute left-0 top-0 h-6 w-6 self-start" />

                                        <div class="ml-9 flex flex-col gap-2">
                                            <p class="font-semibold text-stone-900">{p.title}</p>
                                            <p class="text-sm text-gray-600">{p.description}</p>
                                        </div>
                                    </div>
                                )
                        )
                    }
                </div>
            </div>
        </Container>

        <Container>
            <div class="mx-auto grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-6 md:gap-8">
                {
                    allBrands.map((b) => (
                        <div class="bg-stone-100 p-6 flex justify-center rounded">
                            <Icon name={`brands/${b.data.logo}`} alt={b.data.title} class="h-8 lg:h-16 w-full lg:w-1/2 object-contain text-stone-900 place-self-center" />
                        </div>
                    ))
                }
            </div>
        </Container>

        {
            allBuilds.length >= 3 && (
                <Container>
                    <div class="space-y-16">
                        <h2 class="text-center">Recent {part.data.title} Builds</h2>

                        <div class="grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-4 gap-12">
                            {allBuilds.map((b) => <BuildSnippet build={b} sizes="(min-width: 350px), (min-width: 768px) 500px, (min-width: 1024px) 600px, (min-width: 1280px) 300px, 100vw" pad={false} height="h-60" />).slice(0, buildCount)}
                        </div>
                    </div>
                </Container>
            )
        }
    </Section>

    <style define:vars={{ remainder }}>
        .brands {
            --gap: 3em;
            --columns: var(--remainder);
            gap: var(--gap);
        }

        .brandItem {
            width: calc((100% / var(--columns)) - var(--gap) + (var(--gap) / var(--columns)));
        }
    </style>
</Layout>
