---
import Layout from "@/layouts/Layout";

// imports
import { getBuildImage } from "@/functions/Image";
import { getBuildTitle } from "@/functions/Content";
import { getCollection, getEntry } from "astro:content";
import { getMedia } from "@/functions/Image";
import { timeAgo } from "@/functions/DateTime";

import Container from "@/components/Container";
import Gallery from "@/components/images/Gallery";
import Icon from "@/components/Icon";
import Picture from "@/components/images/Picture";
import RelatedBuild from "@/components/builds/RelatedBuild";
import Testimonial from "@/components/content/testimonials/TestimonialAlt"

// content
export async function getStaticPaths() {
    const allBuilds = await getCollection("builds");
    return allBuilds.map((build) => ({
        params: { build: build.id },
        props: { build },
    }));
}
const { build } = Astro.props;

const make = await getEntry("makes", build.data.meta.make.id);
const model = await getEntry("models", build.data.meta.model.id);

let testimonial;
if (build.data.meta.testimonial) {
    testimonial = await getEntry("testimonials", build.data.meta.testimonial.id);
}
---

<Layout title={`Custom ${build.data.meta.year} ${make.data.title} ${model.data.title} ${build.data.meta.trim} Built by THOR Off-Road`}>
    <Picture src={getBuildImage(build.id, build.data.images.snippet)} alt={getBuildTitle(build.id)} class="header-single" />

    <div class="-mt-20">
        <Container padding={true}>
            <div class="section section-bottom grid grid-cols-2 sm:gap-4">
                <div class="lg:sticky lg:top-28 box-spacing bg-black col-span-2 lg:col-span-1 text-white space-y-8 h-fit">
                    <h1>{getBuildTitle(build.id)}</h1>

                    <div class="space-y-8">
                        {build.data.meta.goals && <div class="text-base space-y-4" set:html={build.data.meta.goals} />}
                        
                        {build.data.meta.testimonial && <div class="text-base space-y-4">
                            <Testimonial content={testimonial}  />
                        </div>}

                        <div class="space-y-4">
                            <h2 class="h4">Parts List</h2>
                            <ul class="space-y-2 text-sm tracking-tight">
                                {build.data.meta.parts.map((p) => <li>{p}</li>)}
                            </ul>
                        </div>

                        {
                            build.data.related && (
                                <div class="hidden sm:block space-y-6">
                                    <h2 class="h4">Related Builds</h2>
                                    {build.data.related.map((b) => (
                                        <RelatedBuild id={b.id} />
                                    ))}
                                </div>
                            )
                        }
                    </div>
                </div>

                <div class="col-span-2 lg:col-span-1">
                    <div class="bg-white box-spacing mb-4 flex flex-col sm:flex-row justify-between sm:items-center gap-4 sm:gap-0">
                        <div class="flex flex-row gap-8 text-xs items-center text-stone-700">
                            <div class="flex flex-col gap-2">
                                <div class="font-semibold">Color</div>
                                <div>{build.data.meta.color}</div>
                            </div>

                            <div class="flex flex-col gap-2">
                                <div class="font-semibold">Drive</div>
                                <div>{build.data.meta.drive}</div>
                            </div>

                            <div class="flex flex-col gap-2">
                                <div class="font-semibold">Date</div>
                                <div>{timeAgo(build.data.date)}</div>
                            </div>
                        </div>

                        {
                            build.data.video && (
                                <div class="align-self-end flex-none">
                                    <a
                                        href={getMedia(`images/builds/${build.id}/${build.data.video.filename}.mp4`)}
                                        data-sources={`[{"src":"${getMedia(`images/builds/${build.id}/${build.data.video.filename}.mp4`)}", "type": "video/mp4" }]`}
                                        data-width={build.data.video.width}
                                        data-height={build.data.video.height}
                                        class="video text-xs sm:text-sm flex items-center font-medium gap-2">
                                        <span>
                                            Watch the
                                            <br />
                                            Build Video
                                        </span>
                                        <Icon icon="hero/PlayCircleFill" class="h-6 sm:h-10" />
                                    </a>
                                </div>
                            )
                        }
                    </div>

                    <Gallery>
                        <div class="grid grid-cols-2 gap-4">
                            {
                                Array.from(Array(build.data.images.total)).map((_, i) => (
                                    <Picture src={getBuildImage(build.id, i + 1)} class:list={["aspect-square w-full h-auto object-cover", build.data.images.total % 2 !== 0 && i + 1 == build.data.images.total && `col-span-2`]} sizes="(max-width:1024) 50vw, 300px" />
                                ))
                            }
                        </div>
                    </Gallery>
                </div>
            </div>
        </Container>
    </div>
</Layout>
