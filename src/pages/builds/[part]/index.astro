---
import Layout from "../../../layouts/Layout.astro";

// components
import Background from "../../../components/content/Background.astro";
import BuildFilter from "../../../components/builds/BuildFilter.astro";
import BuildFilterListing from "../../../components/builds/BuildFilterListing.astro";
import BuildSnippet from "../../../components/builds/BuildSnippet.astro";
import Container from "../../../components/Container.astro";
import FlexColumn from "../../../components/content/FlexColumn.astro";
import HeadingBase from "../../../components/content/headings/HeadingBase.astro";
import ImageOverlay from "../../../components/content/headings/ImageOverlay.astro";
import ListingGrid from "../../../components/builds/BuildListing.astro";
import Picture from "../../../components/images/Picture.astro";
import Section from "../../../components/Section.astro";

// content
import { getCollection } from "astro:content";
export async function getStaticPaths() {
    const allParts = await getCollection("parts");
    return allParts.map((part) => ({
        params: { part: part.slug },
        props: { part },
    }));
}
const { part } = Astro.props;

const allBuilds = await getCollection("builds", ({ data }) => {
    return data.categories.includes(part.slug);
});

// aggregate the metadata
const allParts = await getCollection("parts");
const allMakes = await getCollection("makes");
---

<Layout>
    <ImageOverlay>
        <Picture slot="image" src={part.data.featured} class="absolute inset-0 w-full h-full object-cover saturate-50" width={2000} height={2000} alt={``} />
        <HeadingBase heading={`${part.data.title} Builds`} description={part.data.descriptionShort} />
    </ImageOverlay>

    <Background>
        <Section>
            <Container>
                <FlexColumn float={true}>
                    <div slot="left" class="grid sm:grid-cols-2 lg:grid-cols-1 h-full gap-8 bg-white p-8 shadow rounded space-y-6 sm:space-y-0 lg:space-y-6">
                        <BuildFilterListing heading="Filter by Parts">
                            {
                                allParts.map((p) => (
                                    <BuildFilter href={`/builds/${p.slug}`} current={p.slug.includes(part.slug) ? true : false}>
                                        {p.data.title}
                                    </BuildFilter>
                                ))
                            }
                        </BuildFilterListing>

                        <BuildFilterListing heading="Filter by Vehicle">
                            {allMakes.map((m) => <BuildFilter href={`/builds/${m.slug}`}>{m.data.title}</BuildFilter>)}
                        </BuildFilterListing>
                    </div>

                    {
                        allBuilds.length > 0 ? (
                            <ListingGrid>
                                {allBuilds.map((b) => (
                                    <BuildSnippet build={b} sizes="350px" classes="shadow rounded bg-white" />
                                ))}
                            </ListingGrid>
                        ) : (
                            <div class="bg-white rounded shadow w-full p-8 space-y-6">
                                <h3>We Need Your {part.data.title} Build!</h3>
                                <p class="text-lg tracking-tight leading-8">
                                    We've only begun showcasing our completed builds recently and we haven't had a chance to feature any {part.data.title} builds yet. We'd love to show you what's possible at THOR Off-Road.{" "}
                                    <a href="/contact" class="underline decoration-1 underline-offset-2 font-semibold">
                                        Let's get in touch and build your dream vehicle
                                    </a>
                                    .
                                </p>
                            </div>
                        )
                    }
                </FlexColumn>
            </Container>
        </Section>
    </Background>
</Layout>
