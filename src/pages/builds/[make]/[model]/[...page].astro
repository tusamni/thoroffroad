---
import Layout from "@/layouts/Layout";

// imports
import { getBuildImage } from "@/functions/Image";
import { Icon } from "astro-icon";

import BuildFilter from "@/components/builds/BuildFilter";
import BuildFilterListing from "@/components/builds/BuildFilterListing";
import BuildSnippet from "@/components/builds/BuildSnippet";
import Container from "@/components/Container";
import HeadingBottom from "@/components/content/headings/HeadingBottom";
import ListingGrid from "@/components/builds/BuildListing";
import Pagination from "@/components/Pagination";
import Picture from "@/components/images/Picture";
import Section from "@/components/Section";

// content
import { getCollection } from "astro:content";
export async function getStaticPaths({ paginate }) {
    const allModels = await getCollection("models");
    const allBuilds = (await getCollection("builds")).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

    return allModels.flatMap((model) => {
        const filteredBuilds = allBuilds.filter((build) => build.data.make == model.data.make && build.data.model == model.data.title);

        return paginate(filteredBuilds, {
            params: { make: model.data.make.toLowerCase(), model: model.data.slug },
            props: { model },
            pageSize: 8,
        });
    });
}
const { page, model } = Astro.props;

// aggregate the metadata
const allMakes = await getCollection("makes");
const allModels = await getCollection("models", ({ data, slug }) => {
    return data.draft !== true && data.make.includes(model.data.make);
});
const allParts = await getCollection("parts");
---

<Layout>
    <HeadingBottom>
        <Picture src={getBuildImage(215615, 12)} slot="background" class="w-full h-[25vh] sm:h-full" />

        <h1 slot="heading">{model.data.title} Builds</h1>
    </HeadingBottom>

    <Section small={true}>
        <Container classes="space-y-16">
            <div class="flex flex-row justify-between items-center gap-4">
                <div>
                    Viewing {page.total} Builds
                </div>

                <a href="#filter" class="button button-primary !w-fit text-sm sm:text-base">
                    <div class="button-icon">
                        <Icon name="hero/AdjustmentsHorizontal" class="w-5 h-auto" />
                    </div>
                    <div class="button-text">Filter Builds</div>
                </a>
            </div>

            <ListingGrid>
                {page.data.map((b) => <BuildSnippet build={b} sizes="(min-width:640px) 50vw, (min-width:1024px) 25vw, 100vw" height="h-[15em]" />)}
            </ListingGrid>

            <Pagination page={page} />
        </Container>
    </Section>

    <div id="filter" class="bg-gradient-to-br from-stone-100 via-stone-100 to-stone-50">
        <Section small={true}>
            <Container classes="space-y-12">
                <div>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-16">
                        <BuildFilterListing heading="Filter by Parts">
                            {
                                allParts.map((p) => (
                                    <BuildFilter href={`/builds/${p.slug}`}>
                                        <div class="space-y-2">
                                            <div class="text-base">{p.data.title}</div>
                                            <div class="text-xs line-clamp-2 text-stone-600">{p.data.descriptionShort}</div>
                                        </div>
                                    </BuildFilter>
                                ))
                            }
                        </BuildFilterListing>

                        <BuildFilterListing heading="Filter by Vehicle">
                            {
                                allMakes.map((m) => (
                                    <BuildFilter href={`/builds/${m.slug}`} current={m.slug.includes(model.data.make.toLowerCase()) ? true : false}>
                                        <div class="space-y-2">
                                            <div class="text-base line-clamp-1">{m.data.title}</div>
                                            <div class="text-xs line-clamp-2 text-stone-600">{m.data.descriptionShort}</div>
                                        </div>
                                    </BuildFilter>
                                ))
                            }
                        </BuildFilterListing>

                        <BuildFilterListing heading="Filter by Model">
                            {
                                allModels.map((m) => (
                                    <BuildFilter href={`/builds/${Astro.params.make}/${m.slug}`} current={Astro.url.pathname.includes(m.slug) ? true : false}>
                                        {m.data.title}
                                    </BuildFilter>
                                ))
                            }
                        </BuildFilterListing>
                    </div>
                </div>
            </Container>
        </Section>
    </div>
</Layout>
