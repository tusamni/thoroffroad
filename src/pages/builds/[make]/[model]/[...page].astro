---
import Layout from "@/layouts/Layout";

// imports
import BuildFilter from "@/components/builds/BuildFilter";
import BuildSnippet from "@/components/builds/BuildSnippet";
import Container from "@/components/Container";
import ListingGrid from "@/components/builds/BuildListing";
import Pagination from "@/components/Pagination";
import Section from "@/components/Section";

// content
import { getCollection } from "astro:content";
export async function getStaticPaths({ paginate }) {
    const allModels = await getCollection("models");
    const allBuilds = (await getCollection("builds")).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

    return allModels.flatMap((model) => {
        const filteredBuilds = allBuilds.filter((build) => build.data.meta.make == model.data.make && build.data.meta.model == model.data.id);

        return paginate(filteredBuilds, {
            params: { make: model.data.make.id, model: model.data.id },
            props: { model },
            pageSize: 8,
        });
    });
}
const { page, model } = Astro.props;
---

<Layout>
    
</Layout>
