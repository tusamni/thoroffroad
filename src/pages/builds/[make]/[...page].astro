---
import Layout from "@/layouts/Layout";

// imports
import BuildFilter from "@/components/builds/BuildFilter";
import BuildSnippet from "@/components/builds/BuildSnippet";
import Container from "@/components/Container";
import ListingGrid from "@/components/builds/BuildListing";
import Pagination from "@/components/Pagination";
import Section from "@/components/Section";

// content
import { getCollection } from "astro:content";
export async function getStaticPaths({ paginate }) {
    const allMakes = await getCollection("makes");
    const allBuilds = (await getCollection("builds")).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

    return allMakes.flatMap((make) => {
        const filteredBuilds = allBuilds.filter((build) => build.data.make.toLowerCase().includes(make.id));

        return paginate(filteredBuilds, {
            params: { make: make.id },
            props: { make },
            pageSize: 8,
        });
    });
}
const { page, make } = Astro.props;
---

<Layout>
    <Section small={true}>
        <Container classes="space-y-16">
            <div class="max-w-3xl space-y-4">
                <h1>{make.data.title} Builds</h1>
                <p class="space-y-4 text-xl leading-8">{make.data.descriptionShort}</p>
            </div>

            <div class="flex justify-between items-center">
                <BuildFilter />

                <div class="hidden md:block">
                    <Pagination page={page} />
                </div>
            </div>

            <ListingGrid>
                {page.data.map((b) => <BuildSnippet build={b} sizes="(min-width:640px) 50vw, (min-width:1024px) 25vw, (min-width:1280px) 300px, 100vw" height="h-[15em]" />)}
            </ListingGrid>

            <div class="flex justify-between items-center">
                <div class="hidden sm:block text-sm">Page {page.currentPage} of {page.lastPage}</div>

                <Pagination page={page} />
            </div>
        </Container>
    </Section>
</Layout>
