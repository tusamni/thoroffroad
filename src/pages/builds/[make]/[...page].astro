---
import Layout from "@/layouts/Layout";

// imports
import { Icon } from "astro-icon";

import BuildFilter from "@/components/builds/BuildFilter";
import BuildFilterListing from "@/components/builds/BuildFilterListing";
import BuildSnippet from "@/components/builds/BuildSnippet";
import Container from "@/components/Container";
import FlexColumn from "@/components/content/FlexColumn";
import ListingGrid from "@/components/builds/BuildListing";
import Section from "@/components/Section";

// content
import { getCollection } from "astro:content";
export async function getStaticPaths({ paginate }) {
    const allMakes = await getCollection("makes");
    const allBuilds = (await getCollection("builds")).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

    return allMakes.flatMap((make) => {
        const filteredBuilds = allBuilds.filter((build) => build.data.make.toLowerCase().includes(make.slug));

        return paginate(filteredBuilds, {
            params: { make: make.slug },
            props: { make },
            pageSize: 6,
        });
    });
}
const { page, make } = Astro.props;

// aggregate the metadata
const allMakes = await getCollection("makes");
const allModels = await getCollection("models", ({ data }) => {
    return data.draft !== true && data.make.toLowerCase().includes(make.slug);
});
const allParts = await getCollection("parts");
---

<Layout>
    <Section small={true}>
        <Container>
            <FlexColumn reverse={true}>
                <div slot="left" class="grid sm:grid-cols-2 lg:grid-cols-1 h-full gap-8 space-y-6 sm:space-y-0 lg:space-y-6">
                    <BuildFilterListing heading="Filter by Parts">
                        {
                            allParts.map((p) => (
                                <BuildFilter href={`/builds/${p.slug}`}>
                                    <div class="space-y-2">
                                        <div class="text-base">{p.data.title}</div>
                                        <div class="text-xs line-clamp-2 text-stone-600">{p.data.descriptionShort}</div>
                                    </div>
                                </BuildFilter>
                            ))
                        }
                    </BuildFilterListing>

                    <BuildFilterListing heading="Filter by Vehicle">
                        {
                            allMakes.map((m) => (
                                <BuildFilter href={`/builds/${m.slug}`} current={m.slug.includes(make.slug) ? true : false}>
                                    {m.data.title}
                                </BuildFilter>
                            ))
                        }
                    </BuildFilterListing>

                    <BuildFilterListing heading="Filter by Model">
                        {
                            allModels.map((m) => (
                                <BuildFilter href={`/builds/${make.slug}/${m.slug}`} current={m.slug.includes(make.slug) ? true : false}>
                                    {m.data.title}
                                </BuildFilter>
                            ))
                        }
                    </BuildFilterListing>
                </div>

                <div class="space-y-16">
                    <h1>{make.data.title} Builds</h1>

                    <ListingGrid columns="grid-cols-2">
                        {page.data.map((b) => <BuildSnippet build={b} sizes="(min-width:640px) 50vw, (min-width:1024px) 350px, 100vw" height="h-[15em]" />)}
                    </ListingGrid>

                    <div class="flex flex-row justify-between items-center gap-4">
                        <div>
                            Page {page.currentPage} of {page.lastPage}
                        </div>

                        <div class="flex gap-4">
                            <a href={page.url.prev} class="button button-primary">
                                <div class="button-icon"><Icon name="hero/ChevronLeft" class="text-black w-5 h-5" /></div>
                                <div class="button-text">Previous</div>
                            </a>

                            <a href={page.url.next} class="button button-primary">
                                <div class="button-text">Next</div>
                                <div class="button-icon"><Icon name="hero/ChevronRight" class="text-black w-5 h-5" /></div>
                            </a>
                        </div>
                    </div>
                </div>
            </FlexColumn>
        </Container>
    </Section>
</Layout>
