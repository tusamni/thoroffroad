---
import { getCollection } from "astro:content";

interface Props {
    current?: boolean;
}
const { current = false, ...attrs } = Astro.props;

const allMakes = await getCollection("makes");
const allParts = await getCollection("parts");

let allModels;
if (Astro.params.make) {
    allModels = await getCollection("models", ({ data }) => {
        return data.make.id.includes(Astro.params.make);
    });
}
---

<form class="w-full flex flex-col md:flex-row gap-4 items-center">
    <div class="w-full md:w-fit">
        <label for="filterParts" class="hidden">Filter by Parts</label>
        <select name="filterParts" id="filterParts" class="filter rounded-sm text-xs border-neutral-300 border">
            <option value="">Filter by Parts</option>
            {
                allParts.map((p) => (
                    <option value={`builds/${p.id}`} selected={Astro.params.part == p.id && `selected`}>
                        {p.data.title}
                    </option>
                ))
            }
        </select>
    </div>

    <div class="w-full md:w-fit">
        <label for="filterVehicle" class="hidden">Filter by Vehicle</label>
        <select name="filterVehicle" id="filterVehicle" class="md:pr-8 filter rounded-sm text-xs border-neutral-300 border">
            <option value="">Filter by Vehicle</option>
            {
                allMakes.map((m) => (
                    <option value={`builds/${m.id}`} selected={Astro.params.make == m.id && `selected`}>
                        {m.data.title}
                    </option>
                ))
            }
        </select>
    </div>

    {
        Astro.params.make && (
            <div class="w-full md:w-fit">
                <label for="filterModel" class="hidden">Filter by Model</label>
                <select name="filterModel" id="filterModel" class="md:pr-8 filter rounded-sm text-xs border-neutral-300 border">
                    <option value="">Filter by Model</option>
                    {allModels.map((m) => (
                        <option value={`builds/${Astro.params.make}/${m.id}`} selected={Astro.params.model == m.id && `selected`}>
                            {m.data.title}
                        </option>
                    ))}
                </select>
            </div>
        )
    }
</form>

<script>
    const filterControls = document.getElementsByClassName("filter");

    const runFilter = function () {
        if (this.value !== "") {
            window.location.href = `/${this.value}`;
        }
    };

    for (let control of filterControls) {
        control.addEventListener("change", runFilter);
    }
</script>
