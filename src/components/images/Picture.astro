---
// imports
import { getEntry } from "astro:content";

// props
interface Props {
	src: string;
	alt?: string;
	lazy?: boolean;
	sizes?: string;
	quality?: number;
}
const { src, alt, lazy = true, sizes = "100vw", ...attrs } = Astro.props;

const imageSizes = [4000, 3500,  3000, 2500, 2000, 1800, 1500, 1200, 1000, 800, 600, 500, 400, 300, 200];

// content
// image details
const imageName = src.replace("https://cdn.cosmicjs.com/", "");

// get image data
const imageMetadata = await getEntry("media", imageName);

// loop through all the necessary image widths
const imageOptimized = [];
for (let size of imageSizes) {
	imageOptimized.push(`${imageMetadata.data.imgix_url}?w=${size}&auto=format ${size}w`);
}
const imageSrcSet = imageOptimized.join(", ");
---

{
	imageMetadata ? (
		<img
			srcset={imageSrcSet}
			src={`${imageMetadata.data.imgix_url}?auto=format`}
			alt={imageMetadata.data.alt}
			width={imageMetadata.data.width}
			height={imageMetadata.data.height}
			data-img={`${imageMetadata.data.imgix_url}?auto=format`}
			data-width={imageMetadata.data.width}
			data-height={imageMetadata.data.height}
			data-caption={imageMetadata.data.alt}
			sizes={sizes}
			{...attrs}
			loading={lazy ? "lazy" : "eager"}
		/>
	) : (
		<img src={`${imageMetadata.data.imgix_url}?auto=format`} srcset={imageSrcSet} loading={lazy ? "lazy" : "eager"} sizes={sizes} {...attrs} />
	)
}
