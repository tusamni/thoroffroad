---
// imports
import { getImage } from "astro:assets";
import { imageConfig } from "@/config";

import imageSize from "probe-image-size";

// props
interface Props {
    src: string;
    alt?: string;
    loading?: string;
    sizes?: string;
    quality?: number;
}
const { src, alt, loading = "lazy", sizes = "100vw", quality = 85, ...attrs } = Astro.props;

// content
const fullPath = `${imageConfig.cloudUrl}/images/${src}`;

// loop through all the necessary image widths
const optimizedJpeg = [];
for (let size of imageConfig.imageSizes) {
    optimizedJpeg.push(await getImage({ src: fullPath, format: "jpeg", width: size, height: size, quality: quality }));
}

const optimizedWebp = [];
for (let size of imageConfig.imageSizes) {
    optimizedWebp.push(await getImage({ src: fullPath, format: "webp", width: size, height: size, quality: quality }));
}

// create the srcset attribute
const sourcesJpeg = optimizedJpeg.map((i) => {
    return `${i.src} ${i.attributes.width}w`;
});
const srcsetJpeg = sourcesJpeg.join(", ");

// create the srcset attribute
const sourcesWebp = optimizedWebp.map((i) => {
    return `${i.src} ${i.attributes.width}w`;
});
const srcsetWebp = sourcesWebp.join(", ");

// get the dimensions of the image
let dimensions;
if (import.meta.env.PROD) {
    dimensions = await imageSize(fullPath);
} else {
    dimensions = {
        width: 500,
        height: 500,
    };
}
---
<picture>
    <source srcset={srcsetWebp} sizes={sizes} type="image/webp" />
    <source srcset={srcsetJpeg} sizes={sizes} type="image/jpeg" />
    <img
        src={optimizedJpeg[0].src}
        href={optimizedJpeg[0].src}
        alt={await alt}
        width={dimensions.width}
        height={dimensions.height}
        loading={loading}
        sizes={sizes}
        {...attrs}
        data-img={optimizedJpeg[0].src}
        data-width={dimensions.width}
        data-height={dimensions.height}
        data-caption={await alt}
    />
</picture>

<!-- <img
    href={optimizedImages[0].src}
    src={optimizedImages[0].src}
    srcset={srcset}
    alt={await alt}
    width={dimensions.width}
    height={dimensions.height}
    loading={loading}
    sizes={sizes}
    {...attrs}
    data-img={optimizedImages[0].src}
    data-width={dimensions.width}
    data-height={dimensions.height}
    data-caption={await alt}
/> -->
