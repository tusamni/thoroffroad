---
// imports
import { getEntry } from "astro:content";

// props
interface Props {
	src: string;
	divClass?: string;
	imgClass?: string;
	metadata?: boolean;
	lazy?: boolean;
	sizes?: string;
	quality?: number;
}
const { src, divClass, imgClass, metadata = false, lazy = true, sizes = "100vw", ...attrs } = Astro.props;

const imageSizes = [4000, 3500, 3000, 2500, 2000, 1800, 1500, 1200, 1000, 800, 600, 500, 400, 300, 200];

// content
// image details
const imageName = src.replace("https://cdn.cosmicjs.com/", "");

// get image data
const imageMetadata = await getEntry("media", imageName);
const buildMetadata = await getEntry("builds", imageMetadata.data.name.split("_", 1));
if (!buildMetadata) {
	console.log(`No image found for ${imageMetadata.data.name.split("_", 1)}`);
}

// loop through all the necessary image widths
const imageOptimized = [];
for (let size of imageSizes) {
	imageOptimized.push(`${imageMetadata.data.imgix_url}?w=${size}&auto=format ${size}w`);
}
const imageSrcSet = imageOptimized.join(", ");
---

{
	metadata ? (
		<div class:list={[divClass, "w-full h-full flex flex-col gap-y-3 @container"]}>
			<img
				srcset={imageSrcSet}
				src={`${imageMetadata.data.imgix_url}?auto=format`}
				alt={imageMetadata.data.alt}
				width={imageMetadata.data.width}
				height={imageMetadata.data.height}
				data-img={`${imageMetadata.data.imgix_url}?auto=format`}
				data-width={imageMetadata.data.width}
				data-height={imageMetadata.data.height}
				data-caption={imageMetadata.data.alt}
				sizes={sizes}
				{...attrs}
				loading={lazy ? "lazy" : "eager"}
			/>
			{buildMetadata && (
				<div class="flex justify-between">
					<div class="text-xs @xs:text-sm">{buildMetadata.data.title}</div>

					<div>
						<a href={`/builds/${buildMetadata.id}`} class="flex gap-x-1 items-center">
							<span class="hidden @xs:block font-semibold">View Build</span>
							<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="size-4">
								<path
									fill-rule="evenodd"
									d="M15 8A7 7 0 1 0 1 8a7 7 0 0 0 14 0ZM4.75 7.25a.75.75 0 0 0 0 1.5h4.69L8.22 9.97a.75.75 0 1 0 1.06 1.06l2.5-2.5a.75.75 0 0 0 0-1.06l-2.5-2.5a.75.75 0 0 0-1.06 1.06l1.22 1.22H4.75Z"
									clip-rule="evenodd"
								/>
							</svg>
						</a>
					</div>
				</div>
			)}
		</div>
	) : (
		<img
			srcset={imageSrcSet}
			src={`${imageMetadata.data.imgix_url}?auto=format`}
			alt={imageMetadata.data.alt}
			width={imageMetadata.data.width}
			height={imageMetadata.data.height}
			data-img={`${imageMetadata.data.imgix_url}?auto=format`}
			data-width={imageMetadata.data.width}
			data-height={imageMetadata.data.height}
			data-caption={imageMetadata.data.alt}
			sizes={sizes}
			{...attrs}
			loading={lazy ? "lazy" : "eager"}
		/>
	)
}
