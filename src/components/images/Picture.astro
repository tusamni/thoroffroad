---
// imports
import { imageConfig } from "@/config";
import imageSize from "probe-image-size";

// props
interface Props {
    src: string;
    alt?: string;
    loading?: string;
    sizes?: string;
    quality?: number;
}
const { src, alt, loading = "lazy", sizes = "100vw", quality = 85, ...attrs } = Astro.props;

// content
const fullPath = `${imageConfig.cloudUrl}/images/${src}`;

// loop through all the necessary image widths
const optimizedJpeg = [];
for (let size of imageConfig.imageSizes) {
    optimizedJpeg.push(`${fullPath}?width=${size}&height=${size}&quality=${quality} ${size}w`);
}

console.log(optimizedJpeg);

const srcsetJpeg = optimizedJpeg.join(", ");

console.log(srcsetJpeg);

// get the dimensions of the image
let dimensions;
if (import.meta.env.PROD) {
    dimensions = await imageSize(fullPath);
} else {
    dimensions = {
        width: 500,
        height: 500,
    };
}
---

<img srcset={srcsetJpeg} src={fullPath} href={fullPath} alt={await alt} width={dimensions.width} height={dimensions.height} loading={loading} sizes={sizes} {...attrs} data-img={fullPath} data-width={dimensions.width} data-height={dimensions.height} data-caption={await alt} />
