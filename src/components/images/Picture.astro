---
// imports
import { getCollection, getEntry } from "astro:content";

// props
interface Props {
	src: string;
	divClass?: string;
	imgClass?: string;
	metadata?: boolean;
	lazy?: boolean;
	sizes?: string;
	quality?: number;
}
const { src, divClass, imgClass, metadata = false, lazy = true, sizes = "100vw", ...attrs } = Astro.props;

const imageSizes = [4000, 3500, 3000, 2500, 2000, 1800, 1500, 1200, 1000, 800, 600, 500, 400, 300, 200];

// content
// image details
const imageName = src.replace("https://cdn.cosmicjs.com/", "");

// get image data
const imageMetadata = await getEntry("media", imageName);
const buildMetadata = metadata && (await getEntry("builds", imageMetadata.data.name.split("_", 1)));

// loop through all the necessary image widths
const imageOptimized = [];
for (let size of imageSizes) {
	imageOptimized.push(`${imageMetadata.data.imgix_url}?w=${size}&auto=format ${size}w`);
}
const imageSrcSet = imageOptimized.join(", ");
---

{
	metadata ? (
		<div class:list={[divClass, "w-full h-full flex flex-col gap-y-3 @container"]}>
			<img
				srcset={imageSrcSet}
				src={`${imageMetadata.data.imgix_url}?auto=format`}
				alt={imageMetadata.data.alt}
				width={imageMetadata.data.width}
				height={imageMetadata.data.height}
				data-img={`${imageMetadata.data.imgix_url}?auto=format`}
				data-width={imageMetadata.data.width}
				data-height={imageMetadata.data.height}
				data-caption={imageMetadata.data.alt}
				sizes={sizes}
				{...attrs}
				loading={lazy ? "lazy" : "eager"}
			/>
			{buildMetadata && (
				<div class="flex justify-between gap-x-4">
					<div class="text-xs @xs:text-sm line-clamp-1">{buildMetadata.data.title}</div>

					<div>
						<a href={`/builds/${buildMetadata.id}`} class="flex gap-x-1 items-center">
							<span class="hidden @xs:block font-semibold">View Build</span>
							<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4 @xs:hidden">
								<path stroke-linecap="round" stroke-linejoin="round" d="m11.25 11.25.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9-3.75h.008v.008H12V8.25Z" />
							</svg>
						</a>
					</div>
				</div>
			)}
		</div>
	) : (
		<img
			srcset={imageSrcSet}
			src={`${imageMetadata.data.imgix_url}?auto=format`}
			alt={imageMetadata.data.alt}
			width={imageMetadata.data.width}
			height={imageMetadata.data.height}
			data-img={`${imageMetadata.data.imgix_url}?auto=format`}
			data-width={imageMetadata.data.width}
			data-height={imageMetadata.data.height}
			data-caption={imageMetadata.data.alt}
			sizes={sizes}
			{...attrs}
			loading={lazy ? "lazy" : "eager"}
		/>
	)
}
