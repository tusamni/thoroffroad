---
// props
export interface Props {
    element: string;
    containerClass?: string;
}
const { element, containerClass } = Astro.props as Props;
---

<div class:list={[element, containerClass, "flex flex-wrap gap-4"]}>
    <slot />
</div>

<style>
    div :global(picture) {
        @apply h-[300px] grow;
    }
    div::after {
        content: "";
        flex-grow: 999;
    }
</style>

<script define:vars={{ element }}>
    let bp = BiggerPicture({
        target: document.body,
    });

    // open (will be a child of the target element above)
    let imageLinks = document.querySelectorAll(`.${element} > picture > img`);
    // add click listener to open BiggerPicture
    for (let link of imageLinks) {
        link.addEventListener("click", openGallery);
    }
    // function to open BiggerPicture
    function openGallery(e) {
        e.preventDefault();
        bp.open({
            items: imageLinks,
            el: e.currentTarget,
            scale: 0.8,
        });
    }
</script>
